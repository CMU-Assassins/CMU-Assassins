.row
  .col-sm-6.col-sm-offset-3
    .well.text-center
      .row
        #registered
          | Registered users: 
          strong = Assassins::Player.count
        #active
          | Active users: 
          strong = Assassins::Player.count(:is_verified => true)
        - if game_state == :postgame
          p Game has ended.
        - elsif game_state == :ingame
          #alive
            | Alive users: 
            strong = Assassins::Player.count(:is_verified => true, :is_alive => true)
          form(action=url('/admin/dashboard/prune_inactive') method='post')
            .form-group
              button.btn.btn-danger(type='submit') Check for inactive users
        - else
          form(action=url('/admin/dashboard/start_game') method='post')
            button.btn.btn-info(type='submit') Start teh game!!!
  .col-sm-2.col-sm-offset-1
    a.btn.btn-primary.btn-block(href=url('/admin/logout')) Admin Logout
.row
  .col-sm-6.col-sm-offset-3
    .well.text-center
      .row
        #mass_email
          form(action=url('/admin/dashboard/send_mass_email') method='post')
            legend Mass email
            .form-group
            .col-sm-10.col-sm-offset-1
              input.form-control(type='text' placeholder='Subject' name='subject')
            .form-group
              .body
              .col-sm-10.col-sm-offset-1
                textarea.form-control(rows=3 name='body')
            .form-group
              button.btn.btn-primary(type='submit') Send!
